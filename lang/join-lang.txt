Design Notes:

What are the kinds of things we'd like to be able to say?

Behavior:
  Every joinlang program is made up of one or more require sets. Each require set is
  evaluated in turn until either a require set indicates that the join has been satisfied,
  or all require sets indicated that they have not been satisfied.

Statements:

  JOINSPEC = REQUIRESET ( 'or' REQUIRESET )*

  REQUIRESET = REQUIRE+

  REQUIRE = "require" "node" <node name> WHEN?
          | "require" "label" <arc name> WHEN?
          | "require" ">" <number> (<arc name>)?
          | "require tokenset" <token set name>

  WHEN = 'when' '(' EXPR ')'

  EXPR = <predicate>
       |

  require all arcs labelled DEFAULT
  require at least 1 arc labelled DEFAULT
  require at least 1 arc
  require all arcs