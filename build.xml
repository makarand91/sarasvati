<project name="sarasvati">

  <property name="version" value="1.0.0-rc3"/>

  <property name="dist.dir" value="dist"/>
  <property name="build.dir" value="${dist.dir}/build"/>
  <property name="build.jarbase.dir" value="${dist.dir}/build/jarbase"/>
  <property name="examples.build.dir" value="${dist.dir}/examples"/>

  <property name="dist.name" value="sarasvati-java-${version}"/>
  <property name="release.name" value="sarasvati-${version}"/>
  <property name="visual.release.name" value="sarasvati-visual-${version}"/>
  <property name="editor.release.name" value="sarasvati-editor-${version}"/>

  <property name="archive.base" value="${dist.dir}/${dist.name}"/>
  <property name="fetch.indicator" value="lib/.fetchlibs"/>

  <path id="classpath">
    <fileset dir="lib/">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="hudson">
    <fileset dir="lib/">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="hudson/lib/">
      <include name="*.jar"/>
    </fileset>
  </path>

  <taskdef name="antlr3" classname="org.apache.tools.ant.antlr.ANTLR3" classpathref="classpath"/>
  <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="hudson"/>

  <available file="${fetch.indicator}" property="libs.notfetched"/>
  <available file="lib/rubric.jar" property="rubric.jar.exists"/>

  <target name="fetchlibs" if="libs.notfetched">
    <echo message="Need to fetch libraries from SVN respository. May be slow, depending on your internet connection"/>
    <copy todir="lib" flatten="true">
      <resources>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/antlr-3.1.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/antlr-3.1.1-runtime.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/asm.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/bsf-2.4.0.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/cglib.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/commons-collections-3.2.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/commons-logging.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/dom4j.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/eclipse-draw2d-3.5.0.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/ejb3-persistence.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-3.2.6.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-annotations-3.3.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-commons-annotations-3.3.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/jboss-j2ee.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-openide-util.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-netbeans-api-visual.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-netbeans-api-visual-src.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/postgresql-8.3-603.jdbc4.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/rhino-1.6R7.jar"/>
      </resources>
    </copy>
    <delete file="${fetch.indicator}"/>
  </target>

  <target name="buildLang">
    <mkdir dir="${build.dir}/lang/com/googlecode/sarasvati/rubric/lang"/>
    <mkdir dir="${build.dir}/lang"/>

    <antlr3 target="lang/Rubric.g" dir="lang" outputdirectory="${build.dir}/lang/com/googlecode/sarasvati/rubric/lang"/>

    <javac srcdir="${build.dir}/lang" destdir="${build.dir}/lang" source="1.5" target="1.5" debug="true">
      <include name="**/*.java" />
      <classpath refid="classpath"/>
      <sourcepath path="src"/>
    </javac>
  </target>

  <target name="buildLangJar" depends="buildLang">
    <jar basedir="${build.dir}/lang" destfile="lib/rubric.jar">
      <include name="**/lang/RubricParser*.class"/>
      <include name="**/lang/RubricLexer*.class"/>
      <include name="**/lang/Rubric.tokens"/>
    </jar>
  </target>

  <target name="buildMissingLangJar" unless="rubric.jar.exists">
    <ant target="buildLangJar"/>
  </target>

  <target name="compile" depends="fetchlibs, buildMissingLangJar">
    <mkdir dir="${build.dir}" />
    <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true">
      <src>
        <pathelement path="src"/>
        <pathelement path="visual"/>
        <pathelement path="editor"/>
      </src>
      <include name="**/*.java" />
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compile-examples" depends="compile, buildLang">
    <mkdir dir="${examples.build.dir}" />
    <javac srcdir="examples" destdir="${examples.build.dir}" source="1.5" target="1.5" debug="true">
      <include name="**/*.java" />
      <classpath refid="classpath"/>
      <classpath path="${build.dir}"/>
    </javac>
  </target>

  <target name="dist" depends="compile, buildLang">
    <mkdir dir="${archive.base}"/>

    <copy todir="${build.jarbase.dir}">
      <fileset dir="${build.dir}/lang">
        <include name="**/lang/RubricParser*.class"/>
        <include name="**/lang/RubricLexer*.class"/>
        <include name="**/lang/Rubric.tokens"/>
      </fileset>
      <fileset dir="${build.dir}/com"/>
    </copy>

    <copy todir="${build.jarbase.dir}/com/googlecode/sarasvati">
      <fileset dir="common">
        <include name="ProcessDefinition.xsd"/>
      </fileset>
    </copy>

    <jar basedir="${build.jarbase.dir}" destfile="${archive.base}/${release.name}.jar">
      <exclude name="lang/com/**"/>
      <exclude name="**/visual/**"/>
      <exclude name="**/editor/**"/>
    </jar>

    <jar basedir="${build.jarbase.dir}" includes="**/visual/**" destfile="${archive.base}/${visual.release.name}.jar"/>
    <jar basedir="${build.jarbase.dir}" includes="**/editor/**" destfile="${archive.base}/${editor.release.name}.jar"/>

    <copy todir="${archive.base}">
      <fileset dir=".">
        <include name="build.xml"/>
        <include name="src/**"/>
        <include name="visual/**"/>
        <include name="doc/javadoc/**"/>
        <include name="examples/**"/>
        <include name="lang/**"/>
        <include name="lib/*.txt"/>
        <include name="lib/antlr3-ant.jar"/>
        <include name="README"/>
        <include name="script/run**"/>
        <exclude name="**/.svn/**"/>
      </fileset>
    </copy>

    <copy todir="${archive.base}">
      <fileset dir=".">
        <include name="common/db/**"/>
        <include name="common/*.license"/>
        <include name="common/*.xsd"/>
        <include name="common/test-wf/embedded-task-rej.wf.xml"/>
        <include name="common/test-wf/example1.wf.xml"/>
        <include name="common/test-wf/not-random-guard.wf.xml"/>
        <include name="common/test-wf/one-node.wf.xml"/>
        <include name="common/test-wf/random-guard.wf.xml"/>
        <include name="common/test-wf/subwf-tasks-rej.wf.xml"/>
      </fileset>
    </copy>

    <touch file="${archive.base}/${fetch.indicator}"/>

    <zip destfile="${archive.base}.zip" basedir="${dist.dir}" compress="true" level="9">
      <include name="${dist.name}/**"/>
    </zip>
    <!--
    <tar destfile="${archive.base}.tar" basedir="${dist.dir}" longfile="gnu">
      <include name="${dist.name}/**"/>
    </tar>
    <bzip2 src="${archive.base}.tar" destfile="${archive.base}.tar.bz2"/>
    <delete file="${archive.base}.tar"/>
    -->
  </target>

  <target name="clean">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="findbugs" depends="dist">
    <findbugs home="hudson"
              output="xml"
              outputFile="hudson/findbugs.xml"
              jvmargs="-Xmx200M">
      <sourcePath path="${basedir}/src" />
      <sourcePath path="${basedir}/visual" />
      <sourcePath path="${basedir}/editor" />
      <class location="${build.dir}/com"/>
      <auxClasspath refid="classpath"/>
    </findbugs>
  </target>

  <target name="hudson" depends="findbugs"/>

</project>
