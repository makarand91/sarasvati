/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpenLibraryPanel.java
 *
 * Created on Aug 24, 2009, 3:18:16 PM
 */

package com.googlecode.sarasvati.editor.panel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.regex.Pattern;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.KeyStroke;
import javax.swing.ListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import com.googlecode.sarasvati.editor.GraphEditor;
import com.googlecode.sarasvati.editor.model.Library;
import com.googlecode.sarasvati.editor.model.LibraryEntry;
import com.googlecode.sarasvati.util.SvUtil;

/**
 *
 * @author paul
 */
@SuppressWarnings("synthetic-access")
public class OpenLibraryPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    /** Creates new form OpenLibraryPanel */
    public OpenLibraryPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pdList = new javax.swing.JList();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(330, 425));
        setMinimumSize(new java.awt.Dimension(330, 425));
        setPreferredSize(new java.awt.Dimension(330, 425));

        jLabel1.setText(org.openide.util.NbBundle.getMessage(OpenLibraryPanel.class, "OpenLibraryPanel.jLabel1.text")); // NOI18N

        nameInput.setText(org.openide.util.NbBundle.getMessage(OpenLibraryPanel.class, "OpenLibraryPanel.nameInput.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(OpenLibraryPanel.class, "OpenLibraryPanel.jLabel2.text")); // NOI18N

        pdList.setModel(getListModel());
        jScrollPane1.setViewportView(pdList);

        cancelButton.setText(org.openide.util.NbBundle.getMessage(OpenLibraryPanel.class, "OpenLibraryPanel.cancelButton.text")); // NOI18N

        okButton.setText(org.openide.util.NbBundle.getMessage(OpenLibraryPanel.class, "OpenLibraryPanel.okButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(nameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JButton okButton;
    private javax.swing.JList pdList;
    // End of variables declaration//GEN-END:variables

    protected class NameChangeListener implements DocumentListener
    {
      @Override
      public void changedUpdate (final DocumentEvent e)
      {
        nameUpdated();
      }

      @Override
      public void insertUpdate (final DocumentEvent e)
      {
        nameUpdated();
      }

      @Override
      public void removeUpdate (final DocumentEvent e)
      {
        nameUpdated();
      }
    }

    private JDialog dialog = null;
    private final Library library = Library.getInstance();
    private final DefaultListModel listModel = new DefaultListModel();

    public ListModel getListModel ()
    {
      return listModel;
    }

    public void nameUpdated ()
    {
      String selectedName = nameInput.getText();
      boolean isEmpty = SvUtil.isBlankOrNull( selectedName );
      Pattern p = null;

      if ( !isEmpty )
      {
        StringBuilder buf = new StringBuilder();
        for ( char c : selectedName.toCharArray() )
        {
          if ( Character.isLetterOrDigit( c ) || c == '-' || c == '?' || c == '_' )
          {
            buf.append( c );
          }
          else if ( c == '*' )
          {
            buf.append( ".*" );
          }
        }

        if ( buf.charAt( buf.length() - 1 ) != '*' )
        {
          buf.append( ".*" );
        }

        p = Pattern.compile( buf.toString(), Pattern.CASE_INSENSITIVE );
      }

      listModel.clear();

      for ( final String name : library.getNames() )
      {
        if ( isEmpty || (p != null && p.matcher( name ).matches() ) )
        {
          listModel.addElement( name );
        }
      }

      if ( !listModel.isEmpty() )
      {
        pdList.setSelectedIndex( 0 );
      }

      okButton.setEnabled( !listModel.isEmpty() );
    }

    public void setup (final JDialog dialog)
    {
      this.dialog = dialog;
      cancelButton.addActionListener( new ActionListener()
      {
        @Override
        public void actionPerformed (final ActionEvent e)
        {
          dialog.setVisible( false );
          dialog.dispose();
        }
      });

      okButton.addActionListener( new ActionListener()
      {
        @Override
        public void actionPerformed (final ActionEvent e)
        {
          openSelected();
        }
      });

      final Action enterAction = new AbstractAction()
      {
        private static final long serialVersionUID = 1L;

        @Override
        public void actionPerformed (final ActionEvent e)
        {
          openSelected();
        }
      };

      final Action escapeAction = new AbstractAction()
      {
        private static final long serialVersionUID = 1L;

        @Override
        public void actionPerformed (final ActionEvent e)
        {
          dialog.setVisible( false );
          dialog.dispose();
        }
      };

      KeyStroke enterStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0);
      KeyStroke escapeStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0);
      nameInput.getInputMap().put( enterStroke, enterAction );
      nameInput.getInputMap().put( escapeStroke, escapeAction );
      pdList.getInputMap().put( enterStroke, "pdlist:ENTER" );
      pdList.getActionMap().put( "pdlist:ENTER", enterAction );
      pdList.getInputMap().put( escapeStroke, "pdlist:ESCAPE" );
      pdList.getActionMap().put( "pdlist:ESCAPE", escapeAction );

      pdList.getSelectionModel().addListSelectionListener( new ListSelectionListener()
      {
        @Override
        public void valueChanged (final ListSelectionEvent e)
        {
          okButton.setEnabled( pdList.getSelectedIndex() != -1 );
        }
      });

      pdList.addMouseListener( new MouseAdapter()
      {
        @Override
        public void mouseClicked (final MouseEvent e)
        {
          if ( e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1 )
          {
            openSelected();
          }
        }
      });

      nameUpdated();

      nameInput.getDocument().addDocumentListener( new NameChangeListener() );
    }

    public void openSelected ()
    {
      final GraphEditor graphEditor = GraphEditor.getInstance();
      final Object[] selected = pdList.getSelectedValues();
      if ( selected != null )
      {
        for ( Object name : selected )
        {
          LibraryEntry entry = library.getEntry( (String)name );
          graphEditor.giveFocusOrOpen( entry.getName(), entry.getPath() );
        }
      }
      dialog.setVisible( false );
      dialog.dispose();
    }
}
